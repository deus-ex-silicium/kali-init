---
- name: clone pentest git repos
  git: repo="{{ item.url }}" dest="{{ item.dest }}" depth=1 force=yes
  with_items:
    - {url: "https://github.com/21y4d/nmapAutomator.git", dest: "{{ path_repos }}nmapAutomator"}
    - {url: "https://github.com/david942j/one_gadget.git", dest: "{{ path_repos }}one_gadget"}
    - {url: "https://github.com/niklasb/libc-database.git", dest: "{{ path_repos }}libc-database"}

- name: install apt pentest packages
  include_role: 
    name: ../../kali-init/ansible/roles/bootstrap-apt
  vars:
    apt_packages:
        - nmap
        - default-jdk
        - libssl-dev
        - libffi-dev
        - build-essential
        - gdb-multiarch
        - gdbserver
        - flameshot
        - yubikey-manager

- name: setup python pentest venvs
  include_role: 
    name: ../../kali-init/ansible/roles/bootstrap-python
  vars:
    miniconda_url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    venvs:
      - name: frida
        python_version: 3.12
        pip_packages: ['frida-tools']
      - name: drozer
        python_version: 2.7
        pip_packages: ['drozer']
      - name: pwn
        python_version: 3.12
        pip_packages: ['pwntools', 'ropgadget']
      - name: ansible
        python_version: 3.12
        pip_packages: ['ansible', 'awscli', 'boto']

- name: setup gobuster
  include_role: 
    name: ../../kali-init/ansible/roles/bootstrap-go
  vars:
    go_packages:
      - github.com/OJ/gobuster/v3@latest

- name: setup gef gdb wrapper
  shell: wget -q -O- {{ url_gef }} | sh
  args:
    creates: "{{ ansible_facts.user_dir }}/.gdbinit"

# setup nmapAutomator
- name: download nmap vulners script
  become: true
  get_url: 
    url: https://raw.githubusercontent.com/vulnersCom/nmap-vulners/master/vulners.nse
    dest: /usr/share/nmap/scripts/vulners.nse
- name: check nmapautomator permissions
  file:
    path: "{{ path_repos }}/nmapAutomator/nmapAutomator.sh"
    state: file
    mode: 0750
- name: refresh nmap scripts
  become: true
  command: nmap --script-updatedb
- name: link nmapAutomator
  become: true
  file:
    src: "{{ path_repos }}/nmapAutomator/nmapAutomator.sh"
    dest: "{{ ansible_facts.user_dir }}/bin/nmapAutomator"
    state: link
    force: true

# setup code
- name: install code
  become: true
  apt:
    deb: https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64

- name: copy code config files
  copy: 
    src: "{{ item }}"
    dest: "{{ ansible_facts.user_dir }}/.config/Code/User/"
  with_items:
    - keybindings.json
    - settings.json