---
- name: check if certificate exists
  ansible.builtin.stat: path="{{ ansible_facts.user_dir }}/letsencrypt/{{ vars.common_name }}.crt"
  register: cert

- name: generate certificate
  include_tasks: "generate-cert.yaml"
  args:
    apply:
      become: false
  when: cert.stat.exists == False

- name:
  debug: var=cert_paths

- name: pull key
  ansible.builtin.fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: yes
  when: cert_paths.key is defined
  loop: 
    - {src: "{{ ansible_facts.user_dir }}/letsencrypt/{{ vars.common_name }}.pem", dest: "{{ vars.cert_paths.key }}"}

- name: pull chain
  ansible.builtin.fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: yes
  when: cert_paths.chain is defined
  loop: 
    - {src: "{{ ansible_facts.user_dir }}/letsencrypt/{{ vars.common_name }}-chain.crt", dest: "{{ vars.cert_paths.chain }}"}

- name: pull primary
  ansible.builtin.fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: yes
  when: cert_paths.primary is defined
  loop: 
    - {src: "{{ ansible_facts.user_dir }}/letsencrypt/{{ vars.common_name }}.crt", dest: "{{ vars.cert_paths.primary }}"}

- name: pull intermediate
  ansible.builtin.fetch:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    flat: yes
  when: cert_paths.intermediate is defined
  loop: 
    - {src: "{{ ansible_facts.user_dir }}/letsencrypt/{{ vars.common_name }}-intermediate.crt", dest: "{{ vars.cert_paths.intermediate }}"}
