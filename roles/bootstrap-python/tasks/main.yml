---
- name: check if miniconda exists
  stat: 
    path: "{{ ansible_env.HOME }}/.miniconda"
  register: miniconda

- name: download miniconda installation script
  get_url: 
    url: "{{ miniconda_url }}"
    dest: ~/miniconda.sh
    mode: '0550'
  when: miniconda.stat.exists == false

- name: install miniconda
  command: ~/miniconda.sh -b -p $HOME/.miniconda
  args:
    creates: "{{ ansible_env.HOME }}/.miniconda"
  when: miniconda.stat.exists == false

- name: clean installation file
  file: path=~/miniconda.sh state=absent
  when: miniconda.stat.exists == false

- name: set conda variable
  set_fact:
    conda: "{{ ansible_env.HOME }}/.miniconda/bin/conda"

- name: create virtual environments
  command: "{{ conda }} create -y -n {{ item.name }} python={{ item.python_version }} pip"
  args:
    creates: "{{ ansible_env.HOME }}/.miniconda/envs/{{ item.name }}"
  when: item.name != "base"
  with_items: "{{ venvs }}"

# - name: register installed packages
#   shell: eval "$({{ conda }} shell.posix activate {{ item.name }})" && pip freeze
#   args:
#     executable: /bin/bash
#   register: pip_freeze
#   with_items: "{{ venvs }}"

# - debug: var=pip_freeze

- name: install virtual environment packages
  shell: eval "$({{ conda }} shell.posix activate {{ item.name }})" && pip install {{ item.pip_packages | join(' ') }}
  args:
    executable: /bin/bash
  with_items: "{{ venvs }}"